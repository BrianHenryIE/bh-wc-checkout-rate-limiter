{
    "name": "brianhenryie/bh-wc-checkout-rate-limiter",
    "description": "Rate limits the WooCommerce Place Order button by IP.",
    "type": "wordpress-plugin",
    "license": "GPL-2.0+-or-later",
    "authors": [
        {
            "name": "BrianHenryIE",
            "email": "BrianHenryIE@gmail.com"
        }
    ],
    "autoload-dev": {
        "psr-4": {
            "BrianHenryIE\\Checkout_Rate_Limiter\\": ["tests/integration","tests/unit","tests/wpunit"]
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "process-timeout": 0,
        "sort-packages": true,
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true,
            "cweagans/composer-patches": true,
            "composer/installers": true,
            "phpstan/extension-installer": true
        }
    },
    "repositories": {
        "brianhenryie/bh-wp-private-uploads": {
            "type": "git",
            "url": "https://github.com/brianhenryie/bh-wp-private-uploads"
        },
        "brianhenryie/bh-wp-rate-limiter": {
            "type": "git",
            "url": "https://github.com/brianhenryie/bh-wp-rate-limiter"
        },
        "brianhenryie/bh-wp-logger": {
            "type": "git",
            "url": "https://github.com/brianhenryie/bh-wp-logger"
        },
        "brianhenryie/composer-phpstorm": {
            "url": "https://github.com/BrianHenryIE/composer-phpstorm",
            "type": "git"
        },
        "composer/composer": {
            "type": "composer",
            "url": "https://wpackagist.org"
        },
        "nikolaposa/rate-limit": {
            "url": "https://github.com/BrianHenryIE/rate-limit",
            "type": "git"
        },
        "wordpress/wordpress": {
            "url": "https://github.com/WordPress/wordpress-develop",
            "type": "git"
        },
        "wp-oop/transient-cache": {
            "url": "https://github.com/BrianHenryIE/transient-cache",
            "type": "git"
        },
        "wptrt/admin-notices": {
            "type": "git",
            "url": "https://github.com/brianhenryie/admin-notices"
        }
    },
    "require": {
        "alleyinteractive/wordpress-autoloader": "^1.1",
        "ext-curl": "*",
        "brianhenryie/bh-wp-logger": "dev-master",
        "brianhenryie/bh-wp-rate-limiter": "dev-master",
        "php": ">=7.4"
    },
    "require-dev": {
        "10up/wp_mock": "*",
        "antecedent/patchwork": "^2.1",
        "brianhenryie/color-logger": "^1.0",
        "brianhenryie/composer-phpstorm": "dev-master",
        "brianhenryie/strauss": "*",
        "codeception/module-asserts": "^1.0",
        "codeception/module-cli": "^1.0",
        "codeception/module-db": "^1.0.0",
        "codeception/module-filesystem": "^1.0",
        "codeception/module-phpbrowser": "^1.0.0",
        "codeception/module-webdriver": "^1.0",
        "codeception/util-universalframework": "^1.0",
        "cweagans/composer-patches": "*",
        "dealerdirect/phpcodesniffer-composer-installer": "*",
        "jaschilz/php-coverage-badger": "^2.0",
        "kporras07/composer-symlinks": "dev-master",
        "lucatume/wp-browser": "*",
        "php-stubs/woocommerce-stubs": "^6.4",
        "phpcompatibility/phpcompatibility-wp": "*",
        "phpstan/extension-installer": "*",
        "phpunit/phpcov": "*",
        "squizlabs/php_codesniffer": "*",
        "szepeviktor/phpstan-wordpress": "*",
        "woocommerce/woocommerce-sniffs": "*",
        "wordpress/wordpress": "*",
        "wp-cli/dist-archive-command": "dev-main",
        "wp-cli/i18n-command": "^2.4",
        "wp-cli/wp-cli-bundle": "*",
        "wp-coding-standards/wpcs": "*",
        "wpackagist-plugin/woocommerce": "*",
        "wpackagist-theme/storefront": "*"
    },
    "extra": {
        "patches": {
            "jaschilz/php-coverage-badger": {
                "Allow customising the text": "https://github.com/JASchilz/PHPCoverageBadge/pull/1.patch"
            },
            "wp-cli/dist-archive-command": {
                "Add Increment Version": "https://github.com/BrianHenryIE/dist-archive-command/commit/f37c375ba8069c9160d642dd0c00435e0f1c4804.patch"
            }
        },
        "strauss": {
            "target_directory": "/vendor-prefixed/",
            "namespace_prefix": "BrianHenryIE\\Checkout_Rate_Limiter\\",
            "classmap_prefix": "BH_Checkout_Rate_Limiter_",
            "exclude_from_copy": {
                "file_patterns": [
                    "~nikolaposa/rate-limit/src/(Apcu|Predis|InMemory|Memcached|Redis)RateLimiter\\.php~",
                    "~psr/log/Psr/Log/Test.*~"
                ]
            },
            "namespace_replacement_patterns": {
                "/BrianHenryIE\\\\(.*)/": "BrianHenryIE\\Checkout_Rate_Limiter\\\\$1"
            }
        },
        "symlinks": {
            "wp-content": "wordpress/wp-content",
            ".": "wp-content/plugins/bh-wc-checkout-rate-limiter"
        },
        "phpstorm": {
            "exclude_folders": {
                "folders": [
                    "vendor/php-stubs/woocommerce-stubs",
                    "vendor/wordpress/wordpress/src",
                    "vendor/wordpress/wordpress/build",
                    "wp-content/plugins/bh-wc-checkout-rate-limiter",
                    "wordpress/wp-content"
                ],
                "include_folders": [
                    "vendor/wordpress/wordpress/"
                ],
                "composer-symlinks": false
            }
        }
    },
    "scripts": {
        "post-install-cmd": [
            "vendor/bin/strauss",
            "vendor/bin/wp core download --path=wordpress --allow-root || true;",
            "Kporras07\\ComposerSymlinks\\ScriptHandler::createSymlinks",
            "@setup-wordpress",
            "BrianHenryIE\\ComposerPhpStorm\\ExcludeFolders::update",
            "BrianHenryIE\\ComposerPhpStorm\\PHPUnitRunConfigurations::update"
        ],
        "post-update-cmd": [
            "vendor/bin/strauss",
            "@setup-wordpress",
            "Kporras07\\ComposerSymlinks\\ScriptHandler::createSymlinks",
            "BrianHenryIE\\ComposerPhpStorm\\ExcludeFolders::update",
            "BrianHenryIE\\ComposerPhpStorm\\PHPUnitRunConfigurations::update"
        ],
        "setup-wordpress": [
            "wp core download --path=wordpress --allow-root || true",
            "export $(grep -v '^#' .env.testing | xargs); wp config create --dbname=$TEST_SITE_DB_NAME --dbuser=$TEST_SITE_DB_USER --dbpass=$TEST_SITE_DB_PASSWORD --allow-root --extra-php=\"\ndefine( 'WP_DEBUG_LOG', true );\ndefine( 'SCRIPT_DEBUG', true );\" || true",
            "export $(grep -v '^#' .env.testing | xargs); vendor/bin/wp core install --url=\"localhost:8080/$PLUGIN_SLUG\" --title=\"$PLUGIN_NAME\" --admin_user=admin --admin_password=password --admin_email=admin@example.org || true; wp plugin activate $PLUGIN_SLUG || true;",
            "wp user create bob bob@example.org --user_pass=password || true;",
            "wp core update --allow-root || true",
            "patch ./wordpress/wp-config.php ./patches/wp-debug.diff -s -N -f --no-backup-if-mismatch --reject-file= || true;",
            "patch ./wordpress/wp-includes/plugin.php ./patches/42670.diff -s -N -f --no-backup-if-mismatch --reject-file= || true;",
            "mkdir -p wordpress/wp-content/uploads"
        ],
        "create-databases": [
            "export $(grep -v '^#' .env.testing | xargs); [[ $(mysqld --version) =~ .*MariaDB.* ]] && mysql -e \"CREATE USER IF NOT EXISTS '\"$TEST_DB_USER\"'@'%' IDENTIFIED BY '\"$TEST_DB_PASSWORD\"';\" || mysql -e \"CREATE USER IF NOT EXISTS '\"$TEST_DB_USER\"'@'%' IDENTIFIED WITH mysql_native_password BY '\"$TEST_DB_PASSWORD\"';\";",
            "export $(grep -v '^#' .env.testing | xargs); mysql -e \"CREATE DATABASE IF NOT EXISTS \"$TEST_SITE_DB_NAME\"; USE \"$TEST_SITE_DB_NAME\"; GRANT ALL PRIVILEGES ON \"$TEST_SITE_DB_NAME\".* TO '\"$TEST_DB_USER\"'@'%';\";",
            "export $(grep -v '^#' .env.testing | xargs); mysql -e \"CREATE DATABASE IF NOT EXISTS \"$TEST_DB_NAME\"; USE \"$TEST_DB_NAME\"; GRANT ALL PRIVILEGES ON \"$TEST_DB_NAME\".* TO '\"$TEST_DB_USER\"'@'%';\";",
            "@restore-acceptance-database"
        ],
        "delete-databases": [
            "export $(grep -v '^#' .env.testing | xargs); mysql -e \"DROP TABLE IF EXISTS $TEST_SITE_DB_NAME;\" mysql -e \"DROP TABLE IF EXISTS $TEST_DB_NAME;\"",
            "export $(grep -v '^#' .env.testing | xargs); DB_DIR=$(mysql -e \"select @@datadir\" -N -B); rm -rf $DB_DIR$TEST_SITE_DB_NAME; rm -rf  $DB_DIR$TEST_DB_NAME;",
            "mysql -e \"FLUSH TABLES;\""
        ],
        "save-acceptance-database": [
            "export $(grep -v '^#' .env.testing | xargs); mysqldump -u $TEST_SITE_DB_USER -p$TEST_SITE_DB_PASSWORD  $TEST_SITE_DB_NAME > tests/_data/dump.sql;"
        ],
        "restore-acceptance-database": [
            "export $(grep -v '^#' .env.testing | xargs); mysql $TEST_SITE_DB_NAME < tests/_data/dump.sql"
        ],
        "coverage-tests": [
            "vendor/bin/codecept run unit --coverage unit.cov",
            "vendor/bin/codecept run wpunit --coverage wpunit.cov",
            "vendor/bin/phpcov merge --clover tests/_output/clover.xml --html tests/_output/html tests/_output;",
            "open tests/_output/html/index.html"
        ],
        "lint": [
            "vendor/bin/phpcbf || true",
            "vendor/bin/phpcs || true",
            "vendor/bin/phpstan analyse --memory-limit 2G"
        ],
        "lint-changes": [
            "updated_files=$( git status | grep 'modified:\\s.*.php$' | cut -c14- | awk '{ printf(\"%s \", $0) }' ); vendor/bin/phpcbf $(echo $updated_files); vendor/bin/phpcs $(echo $updated_files); vendor/bin/phpstan analyse $(echo $updated_files) --memory-limit 2G"
        ],
        "php-compatibility": [
            "vendor/bin/phpcs -p src vendor-prefixed --standard=PHPCompatibilityWP --runtime-set testVersion 7.4-"
        ],
        "create-plugin-archive": [
            "vendor/bin/wp i18n make-pot src languages/$(basename \"$PWD\").pot --domain=$(basename \"$PWD\")",
            "vendor/bin/wp dist-archive . ./dist-archive --plugin-dirname=$(basename \"$PWD\") --create-target-dir"
        ],
        "github-actions":  [
            "act -P ubuntu-latest=shivammathur/node:latest"
        ]
    }
}
